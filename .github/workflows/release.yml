name: Release

on:
  release:
    types:
      - created

jobs:
  release-cse:
    name: Deploy CSE release
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          submodules: recursive
      - name: Setup python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv if cache exists
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: vendor/toolkit-205/.venv
          key: poetry-cache-v1-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies if cache does not exist
        shell: bash
        run: cd vendor/toolkit-205 && poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      - name: Build
        shell: bash
        run: cmake -P cmake/configure.cmake && cmake -P cmake/build.cmake
      - name: Upload executable to release assets
        uses: AButler/upload-release-assets@v2.0
        with:
          files: msvc/CSE.exe
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install pandoc
        run: 'cinst -y pandoc --version=1.17.2 --ia=ALLUSERS=1'
        shell: bash
      - name: Add pandoc to path
        run: echo "C:\Program Files (x86)\Pandoc" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Add MSVC developer commands to PATH
        uses: ilammy/msvc-dev-cmd@v1
      - name: Build docs
        run: rake
        working-directory: doc
      - name: Update gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: doc/output
          user_name: 'cse-ci'
          user_email: 'ci@cse.org'
          full_commit_message: "Update docs for ${{ github.event.release.tag_name }}."
