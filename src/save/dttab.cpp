/* DTTAB.CPP: data types table source file automatically generated by rcdef. */

   /* do not edit this file -- it is written over any time rcdef is run --
      instead change the input, dtypes.def, and re-run rcdef.exe. */


#include "cnglob.h"
#include "srd.h"	// declares variables defined here
//#include <dtypes.h>	typedef's types sizeof'd here -- already included via cnglob.h

#define ML(low, high) ((ULI)(((USI)(low)) | (((ULI)((USI)(high))) << 16)))	//MAKELONG

/* Data types table */

LI Dttab[] =
{ /* size   #choices if choice type
                choice texts if choice type   // type (Dttab subscript + bits) & symbol (dtypes.h) */
    0,
    sizeof(INT), 				// 0x0001 DTINT
    sizeof(INTP), 				// 0x0002 DTINTP
    sizeof(SI), 				// 0x0003 DTSI
    sizeof(BOO), 				// 0x0004 DTBOO
    sizeof(USI), 				// 0x0005 DTUSI
    sizeof(LI), 				// 0x0006 DTLI
    sizeof(ULI), 				// 0x0007 DTULI
    sizeof(FLOAT), 				// 0x0008 DTFLOAT
    sizeof(FLOATP), 				// 0x0009 DTFLOATP
    sizeof(VOIDP), 				// 0x000a DTVOIDP
    sizeof(DOW), 				// 0x000b DTDOW
    sizeof(MONTH), 				// 0x000c DTMONTH
    sizeof(CH), 				// 0x000d DTCH
    sizeof(CHP), 				// 0x000e DTCHP
    sizeof(UCH), 				// 0x000f DTUCH
    sizeof(TI), 				// 0x0010 DTTI
    sizeof(ANAME), 				// 0x0011 DTANAME
    sizeof(IDATE), 				// 0x0012 DTIDATE
    sizeof(ITIME), 				// 0x0013 DTITIME
    sizeof(DOY), 				// 0x0014 DTDOY
    sizeof(SHOY), 				// 0x0015 DTSHOY
    sizeof(IDATETIME), 				// 0x0016 DTIDATETIME
    sizeof(LDATETIME), 				// 0x0017 DTLDATETIME
    sizeof(DBL), 				// 0x0018 DTDBL
    sizeof(DBLP), 				// 0x0019 DTDBLP
    sizeof(SGTARGP), 				// 0x001a DTSGTARGP
    sizeof(MASSLAYERP), 				// 0x001b DTMASSLAYERP
    sizeof(MASSMODELP), 				// 0x001c DTMASSMODELP
    sizeof(IZXRATP), 				// 0x001d DTIZXRATP
    sizeof(VALNDT), 				// 0x001e DTVALNDT
    sizeof(TCCM), 				// 0x001f DTTCCM
    sizeof(ZHXTY), 				// 0x0020 DTZHXTY
    sizeof(TCUSE), 				// 0x0021 DTTCUSE
    sizeof(COILUSED), 				// 0x0022 DTCOILUSED
    sizeof(AHMODE), 				// 0x0023 DTAHMODE
    sizeof(TOWLOADCASE), 				// 0x0024 DTTOWLOADCASE
    sizeof(XFILEP), 				// 0x0025 DTXFILEP
    sizeof(WFLOC), 				// 0x0026 DTWFLOC
    sizeof(WFLID), 				// 0x0027 DTWFLID
    sizeof(WFILEFORMAT), 				// 0x0028 DTWFILEFORMAT
    sizeof(WFLOC2), 				// 0x0029 DTWFLOC2
    sizeof(YACAMP), 				// 0x002a DTYACAMP
    sizeof(WDYEARP), 				// 0x002b DTWDYEARP
    sizeof(RIGTARGTY), 				// 0x002c DTRIGTARGTY
    sizeof(RIGTARG), 				// 0x002d DTRIGTARG
    sizeof(RIGDIST), 				// 0x002e DTRIGDIST
    sizeof(RIGDISTP), 				// 0x002f DTRIGDISTP
    sizeof(ZNRP), 				// 0x0030 DTZNRP
    sizeof(XSURFP), 				// 0x0031 DTXSURFP
    sizeof(DUCTSEGP), 				// 0x0032 DTDUCTSEGP
    sizeof(PIPESEGP), 				// 0x0033 DTPIPESEGP
    ML( sizeof(NOYESCH), 2), 
		(LI)"No",        	
		(LI)"Yes",       		// 0x2034 DTNOYESCH
    ML( sizeof(DGCH), 2), 
		(LI)"ZeroFlux",  	
		(LI)"WaterTable",		// 0x2037 DTDGCH
    ML( sizeof(TSCH), 2), 
		(LI)"Hourly",    	
		(LI)"Subhourly", 		// 0x203a DTTSCH
    ML( sizeof(SKYMODCH), 2), 
		(LI)"Isotropic", 	
		(LI)"Anisotropic",		// 0x203d DTSKYMODCH
    ML( sizeof(SKYMODLWCH), 4), 
		(LI)"Default",   	
		(LI)"BerdahlMartin",	
		(LI)"DryBulb",   	
		(LI)"Blast",     		// 0x2040 DTSKYMODLWCH
    ML( sizeof(EXSHMODELCH), 2), 
		(LI)"None",      	
		(LI)"Penumbra",  		// 0x2045 DTEXSHMODELCH
    ML( sizeof(SLRINTERPMETH), 2), 
		(LI)"CSE",       	
		(LI)"TRNSYS",    		// 0x2048 DTSLRINTERPMETH
    ML( sizeof(DOWCH), 7), 
		(LI)"Sun",       	
		(LI)"Mon",       	
		(LI)"Tue",       	
		(LI)"Wed",       	
		(LI)"Thu",       	
		(LI)"Fri",       	
		(LI)"Sat",       		// 0x204b DTDOWCH
    ML( sizeof(MONCH), 12), 
		(LI)"Jan",       	
		(LI)"Feb",       	
		(LI)"Mar",       	
		(LI)"Apr",       	
		(LI)"May",       	
		(LI)"Jun",       	
		(LI)"Jul",       	
		(LI)"Aug",       	
		(LI)"Sep",       	
		(LI)"Oct",       	
		(LI)"Nov",       	
		(LI)"Dec",       		// 0x2053 DTMONCH
    ML( sizeof(OSTYCH), 6), 
		(LI)"Wall",      	
		(LI)"Ceiling",   	
		(LI)"Floor",     	
		(LI)"*Door",     	
		(LI)"*Slab Perimeter",	
		(LI)"*Window",   		// 0x2060 DTOSTYCH
    ML( sizeof(ZNMODELCH), 3), 
		(LI)"CNE",       	
		(LI)"CZM",       	
		(LI)"UZM|!UZX",  		// 0x2067 DTZNMODELCH
    ML( sizeof(IZNVTYCH), 14), 
		(LI)"None",      	
		(LI)"OneWay",    	
		(LI)"TwoWay",    	
		(LI)"AirNetExt", 	
		(LI)"AirNetIZ",  	
		(LI)"AirNetHoriz",	
		(LI)"AirNetExtFan",	
		(LI)"AirNetIZFan",	
		(LI)"AirNetExtFlow",	
		(LI)"AirNetIZFlow",	
		(LI)"AirNetHERV",	
		(LI)"AirNetDuctLk",	
		(LI)"AirNetSysAir",	
		(LI)"AirNetOAVRelief",		// 0x206b DTIZNVTYCH
    ML( sizeof(EXCNDCH), 5), 
		(LI)"Adiabatic", 	
		(LI)"Ambient",   	
		(LI)"SpecifiedT",	
		(LI)"AdjZn",     	
		(LI)"Ground",    		// 0x207a DTEXCNDCH
    ML( sizeof(SFMODELCH), 7), 
		(LI)"Quick",     	
		(LI)"Delayed",   	
		(LI)"Auto",      	
		(LI)"Delayed_hour",	
		(LI)"Delayed_subhour",	
		(LI)"FD|!Forward_difference",	
		(LI)"Kiva",      		// 0x2080 DTSFMODELCH
    ML( sizeof(GROUNDMODELCH), 2), 
		(LI)"DOE2_InputCoeffs",	
		(LI)"DOE2_CorrelationCoeffs",		// 0x2088 DTGROUNDMODELCH
    ML( sizeof(FBXREFCH), 5), 
		(LI)"Symmetry",  	
		(LI)"WallInt",   	
		(LI)"WallCenter",	
		(LI)"WallExt",   	
		(LI)"FarField",  		// 0x208b DTFBXREFCH
    ML( sizeof(FBZREFCH), 6), 
		(LI)"WallTop",   	
		(LI)"Grade",     	
		(LI)"SlabTop",   	
		(LI)"SlabBottom",	
		(LI)"WallBottom",	
		(LI)"DeepGround",		// 0x2091 DTFBZREFCH
    ML( sizeof(CONVMODELCH), 9), 
		(LI)"Input",     	
		(LI)"ASHRAE",    	
		(LI)"Akbari",    	
		(LI)"Winkelmann",	
		(LI)"Walton",    	
		(LI)"Mills",     	
		(LI)"TARP",      	
		(LI)"DOE2",      	
		(LI)"Unified",   		// 0x2098 DTCONVMODELCH
    ML( sizeof(RSYSMODECTRLCH), 4), 
		(LI)"Off",       	
		(LI)"Heat",      	
		(LI)"Cool",      	
		(LI)"Auto",      		// 0x20a2 DTRSYSMODECTRLCH
    ML( sizeof(RSYSTYCH), 12), 
		(LI)"ACFurnace", 	
		(LI)"ACResistance",	
		(LI)"ACPkgRoom", 	
		(LI)"ACPkgRoomFurnace",	
		(LI)"ACPkgRoomResistance",	
		(LI)"ASHP",      	
		(LI)"ASHPHydronic",	
		(LI)"ASHPPkgRoom",	
		(LI)"VCHP2",     	
		(LI)"AC",        	
		(LI)"Furnace",   	
		(LI)"Resistance",		// 0x20a7 DTRSYSTYCH
    ML( sizeof(RSYSOAVTYCH), 3), 
		(LI)"None",      	
		(LI)"FixedFlow", 	
		(LI)"VarFlow",   		// 0x20b4 DTRSYSOAVTYCH
    ML( sizeof(RSYSDEFROSTMODELCH), 3), 
		(LI)"None",      	
		(LI)"RevCycle",  	
		(LI)"RevCycleAux",		// 0x20b8 DTRSYSDEFROSTMODELCH
    ML( sizeof(AUXHEATTY), 3), 
		(LI)"None",      	
		(LI)"Resistance",	
		(LI)"Furnace",   		// 0x20bc DTAUXHEATTY
    ML( sizeof(AUXHEATCTRL), 3), 
		(LI)"Lockout",   	
		(LI)"Cycle",     	
		(LI)"Alternate", 		// 0x20c0 DTAUXHEATCTRL
    ML( sizeof(WSCALCMODECH), 2), 
		(LI)"PreRun",    	
		(LI)"Simulate",  		// 0x20c4 DTWSCALCMODECH
    ML( sizeof(WHHEATSRCCH), 5), 
		(LI)"Resistance",	
		(LI)"Fuel",      	
		(LI)"ASHP",      	
		(LI)"ASHPX",     	
		(LI)"ResistanceX",		// 0x20c7 DTWHHEATSRCCH
    ML( sizeof(WHTYPECH), 6), 
		(LI)"SmallStorage",	
		(LI)"LargeStorage",	
		(LI)"SmallInstantaneous",	
		(LI)"LargeInstantaneous",	
		(LI)"InstantaneousUEF",	
		(LI)"BuiltUp",   		// 0x20cd DTWHTYPECH
    ML( sizeof(WHASHPTYCH), 84), 
		(LI)"ResTankNoUA",	
		(LI)"ResTank",   	
		(LI)"BasicIntegrated",	
		(LI)"AOSmithPHPT60",	
		(LI)"AOSmithPHPT80",	
		(LI)"AOSmithHPTU50",	
		(LI)"AOSmithHPTU66",	
		(LI)"AOSmithHPTU80",	
		(LI)"AOSmithHPTU80DR",	
		(LI)"AOSmithCAHP120",	
		(LI)"Sanden40",  	
		(LI)"Sanden80",  	
		(LI)"Sanden120", 	
		(LI)"SandenGS3", 	
		(LI)"GE2012",    	
		(LI)"GE2014",    	
		(LI)"GE2014_80", 	
		(LI)"GE2014_80DR",	
		(LI)"GE2014StdMode",	
		(LI)"GE2014StdMode80",	
		(LI)"BWC202065", 	
		(LI)"RheemHB50", 	
		(LI)"RheemHBDR2250",	
		(LI)"RheemHBDR4550",	
		(LI)"RheemHBDR2265",	
		(LI)"RheemHBDR4565",	
		(LI)"RheemHBDR2280",	
		(LI)"RheemHBDR4580",	
		(LI)"Rheem2020Prem40",	
		(LI)"Rheem2020Prem50",	
		(LI)"Rheem2020Prem65",	
		(LI)"Rheem2020Prem80",	
		(LI)"Rheem2020Build40",	
		(LI)"Rheem2020Build50",	
		(LI)"Rheem2020Build65",	
		(LI)"Rheem2020Build80",	
		(LI)"Stiebel220E",	
		(LI)"AOSmithSHPT50",	
		(LI)"AOSmithSHPT66",	
		(LI)"AOSmithSHPT80",	
		(LI)"GenericTier1",	
		(LI)"GenericTier2",	
		(LI)"GenericTier3",	
		(LI)"Generic",   	
		(LI)"UEF2Generic",	
		(LI)"WorstCaseMedium",	
		(LI)"AWHSTier3Generic40",	
		(LI)"AWHSTier3Generic50",	
		(LI)"AWHSTier3Generic65",	
		(LI)"AWHSTier3Generic80",	
		(LI)"ColmacCxV5_SP",	
		(LI)"ColmacCxA10_SP",	
		(LI)"ColmacCxA15_SP",	
		(LI)"ColmacCxA20_SP",	
		(LI)"ColmacCxA25_SP",	
		(LI)"ColmacCxA30_SP",	
		(LI)"ColmacCxV5_MP",	
		(LI)"ColmacCxA10_MP",	
		(LI)"ColmacCxA15_MP",	
		(LI)"ColmacCxA20_MP",	
		(LI)"ColmacCxA25_MP",	
		(LI)"ColmacCxA30_MP",	
		(LI)"NyleC25A_SP",	
		(LI)"NyleC60A_SP",	
		(LI)"NyleC90A_SP",	
		(LI)"NyleC125A_SP",	
		(LI)"NyleC185A_SP",	
		(LI)"NyleC250A_SP",	
		(LI)"NyleC25A_MP",	
		(LI)"NyleC60A_MP",	
		(LI)"NyleC90A_MP",	
		(LI)"NyleC125A_MP",	
		(LI)"NyleC185A_MP",	
		(LI)"NyleC250A_MP",	
		(LI)"NyleC60A_CWP_SP",	
		(LI)"NyleC90A_CWP_SP",	
		(LI)"NyleC125A_CWP_SP",	
		(LI)"NyleC185A_CWP_SP",	
		(LI)"NyleC250A_CWP_SP",	
		(LI)"Rheem_HPHD60HNU_MP",	
		(LI)"Rheem_HPHD60VNU_MP",	
		(LI)"Rheem_HPHD135HNU_MP",	
		(LI)"Rheem_HPHD135VNU_MP",	
		(LI)"Scalable_SP",		// 0x20d4 DTWHASHPTYCH
    ML( sizeof(WHRESTYCH), 2), 
		(LI)"Typical",   	
		(LI)"SwingTank", 		// 0x2129 DTWHRESTYCH
    ML( sizeof(DHWEUCH), 6), 
		(LI)"Faucet",    	
		(LI)"Shower",    	
		(LI)"Bath",      	
		(LI)"CWashr",    	
		(LI)"DWashr",    	
		(LI)"*Count",    		// 0x212c DTDHWEUCH
    ML( sizeof(DHWEUXCH), 8), 
		(LI)"Total",     	
		(LI)"Unknown",   	
		(LI)"Faucet",    	
		(LI)"Shower",    	
		(LI)"Bath",      	
		(LI)"CWashr",    	
		(LI)"DWashr",    	
		(LI)"*Count",    		// 0x2133 DTDHWEUXCH
    ML( sizeof(DHWBRANCHMODELCH), 3), 
		(LI)"T24DHW",    	
		(LI)"DRAWWASTE", 	
		(LI)"DAYWASTE",  		// 0x213c DTDHWBRANCHMODELCH
    ML( sizeof(DHWLSEGTYCH), 2), 
		(LI)"return",    	
		(LI)"supply",    		// 0x2140 DTDHWLSEGTYCH
    ML( sizeof(DWHRTYCH), 3), 
		(LI)"horizontal",	
		(LI)"vertical",  	
		(LI)"SetEF",     		// 0x2143 DTDWHRTYCH
    ML( sizeof(DHWDRMETH), 2), 
		(LI)"none",      	
		(LI)"schedule",  		// 0x2147 DTDHWDRMETH
    ML( sizeof(PVMODCH), 4), 
		(LI)"Standard",  	
		(LI)"Premium",   	
		(LI)"ThinFilm",  	
		(LI)"Custom",    		// 0x214a DTPVMODCH
    ML( sizeof(PVARRCH), 4), 
		(LI)"FixedOpenRack",	
		(LI)"FixedRoofMount",	
		(LI)"OneAxisTracking",	
		(LI)"TwoAxisTracking",		// 0x214f DTPVARRCH
    ML( sizeof(MOUNTCH), 2), 
		(LI)"Building",  	
		(LI)"Site",      		// 0x2154 DTMOUNTCH
    ML( sizeof(FENMODELCH), 2), 
		(LI)"SHGC",      	
		(LI)"ASHWAT",    		// 0x2157 DTFENMODELCH
    ML( sizeof(SIDECH), 2), 
		(LI)"Interior",  	
		(LI)"Exterior",  		// 0x215a DTSIDECH
    ML( sizeof(FILESTATCH), 3), 
		(LI)"Overwrite", 	
		(LI)"New",       	
		(LI)"Append",    		// 0x215d DTFILESTATCH
    ML( sizeof(IVLCH), 6), 
		(LI)"Year",      	
		(LI)"Month",     	
		(LI)"Day",       	
		(LI)"Hour",      	
		(LI)"Subhour",   	
		(LI)"HourAndSub",		// 0x2161 DTIVLCH
    ML( sizeof(RPTYCH), 16), 
		(LI)"ERR",       	
		(LI)"LOG",       	
		(LI)"INP",       	
		(LI)"SUM",       	
		(LI)"ZDD",       	
		(LI)"ZST",       	
		(LI)"ZEB",       	
		(LI)"MTR",       	
		(LI)"UDT",       	
		(LI)"AH",        	
		(LI)"AHSIZE",    	
		(LI)"AHLOAD",    	
		(LI)"TUSIZE",    	
		(LI)"TULOAD",    	
		(LI)"DHWMTR",    	
		(LI)"AFMTR",     		// 0x2168 DTRPTYCH
    ML( sizeof(RPTHDCH), 5), 
		(LI)"No",        	
		(LI)"Yes",       	
		(LI)"YesIfNew",  	
		(LI)"ColumnsOnly",	
		(LI)"ColumnsOnlyIfNew",		// 0x2179 DTRPTHDCH
    ML( sizeof(JUSTCH), 2), 
		(LI)"Left",      	
		(LI)"Right",     		// 0x217f DTJUSTCH
    ML( sizeof(ENDUSECH), 24), 
		(LI)"Clg",       	
		(LI)"Htg",       	
		(LI)"HPBU",      	
		(LI)"DHW",       	
		(LI)"DHWBU",     	
		(LI)"DHWMFL",    	
		(LI)"FanC",      	
		(LI)"FanH",      	
		(LI)"FanV",      	
		(LI)"Fan",       	
		(LI)"Aux",       	
		(LI)"Proc",      	
		(LI)"Lit",       	
		(LI)"Rcp",       	
		(LI)"Ext",       	
		(LI)"Refr",      	
		(LI)"Dish",      	
		(LI)"Dry",       	
		(LI)"Wash",      	
		(LI)"Cook",      	
		(LI)"User1",     	
		(LI)"User2",     	
		(LI)"BT",        	
		(LI)"PV",        		// 0x2182 DTENDUSECH
    ML( sizeof(AFCAT), 13), 
		(LI)"InfilEx",   	
		(LI)"VentEx",    	
		(LI)"FanEx",     	
		(LI)"InfilUz",   	
		(LI)"VentUz",    	
		(LI)"FanUz",     	
		(LI)"InfilCz",   	
		(LI)"VentCz",    	
		(LI)"FanCz",     	
		(LI)"DuctLk",    	
		(LI)"HVAC",      	
		(LI)"None",      	
		(LI)"*Count",    		// 0x219b DTAFCAT
    ML( sizeof(HDAYCASECH), 5), 
		(LI)"first",     	
		(LI)"second",    	
		(LI)"third",     	
		(LI)"fourth",    	
		(LI)"last",      		// 0x21a9 DTHDAYCASECH
    ML( sizeof(FANAPPCH), 5), 
		(LI)"ah supply", 	
		(LI)"ah return/relief",	
		(LI)"terminal",  	
		(LI)"exhaust",   	
		(LI)"interzone", 		// 0x21af DTFANAPPCH
    ML( sizeof(FANTYCH), 8), 
		(LI)"none",      	
		(LI)"drawthru",  	
		(LI)"blowthru",  	
		(LI)"return",    	
		(LI)"relief",    	
		(LI)"series",    	
		(LI)"parallel",  	
		(LI)"exhaust",   		// 0x21b5 DTFANTYCH
    ML( sizeof(MOTTYCH), 2), 
		(LI)"PSC",       	
		(LI)"BPM",       		// 0x21be DTMOTTYCH
    ML( sizeof(MOTPOSCH), 3), 
		(LI)"in flow",   	
		(LI)"in return air",	
		(LI)"external",  		// 0x21c1 DTMOTPOSCH
    ML( sizeof(FANPLCH), 7), 
		(LI)"varspeed",  	
		(LI)"cycle",     	
		(LI)"af_vanes",  	
		(LI)"af_dampers",	
		(LI)"fc_vanes",  	
		(LI)"fc_dampers",	
		(LI)"varpitch_axial",		// 0x21c5 DTFANPLCH
    ML( sizeof(COILAPPCH), 3), 
		(LI)"ahhc",      	
		(LI)"ahhc",      	
		(LI)"tuhc",      		// 0x21cd DTCOILAPPCH
    ML( sizeof(COILTYCH), 8), 
		(LI)"none",      	
		(LI)"electric",  	
		(LI)"dx",        	
		(LI)"chw",       	
		(LI)"hw",        	
		(LI)"gas",       	
		(LI)"oil",       	
		(LI)"ahp",       		// 0x21d1 DTCOILTYCH
    ML( sizeof(ECOTYCH), 4), 
		(LI)"none",      	
		(LI)"nonintegrated",	
		(LI)"two_stage", 	
		(LI)"integrated",		// 0x21da DTECOTYCH
    ML( sizeof(DUCTTYCH), 2), 
		(LI)"return",    	
		(LI)"supply",    		// 0x21df DTDUCTTYCH
    ML( sizeof(OAMNCH), 2), 
		(LI)"volume",    	
		(LI)"fraction",  		// 0x21e2 DTOAMNCH
    ML( sizeof(EXSHDCH), 2), 
		(LI)"none",      	
		(LI)"inscrn",    		// 0x21e5 DTEXSHDCH
    ML( sizeof(INSHDCH), 2), 
		(LI)"none",      	
		(LI)"DrapeMed",  		// 0x21e8 DTINSHDCH
    ML( sizeof(HUMTHCH), 2), 
		(LI)"rob",       	
		(LI)"phil",      		// 0x21eb DTHUMTHCH
    ML( sizeof(OFFONCH), 2), 
		(LI)"off",       	
		(LI)"on",        		// 0x21ee DTOFFONCH
    ML( sizeof(TPSTGCH), 2), 
		(LI)"together",  	
		(LI)"lead",      		// 0x21f1 DTTPSTGCH
    ML( sizeof(CTTYCH), 3), 
		(LI)"onespeed",  	
		(LI)"twospeed",  	
		(LI)"variable",  		// 0x21f4 DTCTTYCH
    ML( sizeof(CCHCM), 6), 
		(LI)"none",      	
		(LI)"constant",  	
		(LI)"constant_clo",	
		(LI)"ptc",       	
		(LI)"ptc_clo",   	
		(LI)"tstat",     		// 0x21f8 DTCCHCM
    ML( sizeof(DIFFSAMECH), 2), 
		(LI)"different", 	
		(LI)"same",      		// 0x21ff DTDIFFSAMECH
    ML( sizeof(AHSCHVC), 2), 
		(LI)"off",       	
		(LI)"on",        		// 0x4202 DTAHSCHVC
    ML( sizeof(OFFAVAILVC), 2), 
		(LI)"off",       	
		(LI)"avail",     		// 0x4205 DTOFFAVAILVC
    ML( sizeof(TFANSCHVC), 4), 
		(LI)"off",       	
		(LI)"on",        	
		(LI)"heating",   	
		(LI)"vav",       		// 0x4208 DTTFANSCHVC
    ML( sizeof(OFFONVC), 2), 
		(LI)"off",       	
		(LI)"on",        		// 0x420d DTOFFONVC
    ML( sizeof(NOYESVC), 2), 
		(LI)"No",        	
		(LI)"Yes",       		// 0x4210 DTNOYESVC
    ML( sizeof(OFFAVAILONVC), 3), 
		(LI)"off",       	
		(LI)"avail",     	
		(LI)"on",        		// 0x4213 DTOFFAVAILONVC
    ML( sizeof(VENTAVAILVC), 4), 
		(LI)"None",      	
		(LI)"WholeBuilding",	
		(LI)"Zonal",     	
		(LI)"RSYSOAV",   		// 0x4217 DTVENTAVAILVC
    ML( sizeof(BATCTRLALGVC), 2), 
		(LI)"Default",   	
		(LI)"TDVPeakSave",		// 0x421c DTBATCTRLALGVC
    ML( sizeof(DHWDRSIG), 11), 
		(LI)"On",        	
		(LI)"TOO",       	
		(LI)"TOOLOR",    	
		(LI)"TOOLOC",    	
		(LI)"TOT",       	
		(LI)"TOTLOR",    	
		(LI)"TOTLOC",    	
		(LI)"LOC",       	
		(LI)"LOR",       	
		(LI)"LOCLOR",    	
		(LI)"*Count",    		// 0x421f DTDHWDRSIG
    ML( sizeof(TSCMNC), 5), 
		(LI)"ra",        	
		(LI)"wz",        	
		(LI)"cz",        	
		(LI)"zn",        	
		(LI)"zn2",       		// 0x422b DTTSCMNC
    ML( sizeof(RANC), 1), 
		(LI)"ra",        		// 0x4231 DTRANC
};	// Dttab[]


// size of data types table (in LI's)

USI Dttmax = 563;

/* end of dttab.cpp */
